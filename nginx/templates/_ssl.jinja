{%- if ssl is defined and ssl is mapping %}
# Start SSL support for vhost
# Listen on SSL
{%- if listen_ip_ssl is defined %}
{%- set listen_ip_ssl = listen_ip_ssl ~ ':' %}
{%- endif %}
listen {{ listen_ip_ssl|default('') }}{{ listen_port_ssl|default('443') }} ssl{{ ' spdy' if ssl.spdy|default(False) else '' }}{{ ' http2' if ssl.http2|default(False) else '' }}{{ ' default_server' if default_server|default(False) else '' }};

# Enable SSL
ssl_certificate /etc/ssl/certs/{{ ssl.cert }};
ssl_certificate_key /etc/ssl/private/{{ ssl.key }};
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
ssl_prefer_server_ciphers on;
ssl_session_cache shared:SSL:10m;
ssl_session_timeout 10m;

# SSL Stapling
ssl_stapling on;
ssl_stapling_verify on;
resolver {{ salt['pillar.get']('nginx:config:resolvers',['8.8.8.8','8.8.4.4'])|join(' ') }} valid=300s;
resolver_timeout 10s;

{% if salt['pillar.get']('nginx:config:dhparam') %}
# Increase DH Params from default 1024 to 2048
ssl_dhparam /etc/ssl/private/dhparam_{{ salt['grains.get']('fqdn') }}.crt;
{%- endif %}

{%- if ssl.prevent_frame is defined and ssl.prevent_frame == True -%}
# Prevent from being loaded into an iframe
add_header X-Frame-Options SAMEORIGIN;
add_header X-Content-Type-Options nosniff;
{%- endif %}

{%- if ssl.forward is defined and ssl.forward == True %}
# Force redirect Non-SSL requests to SSL
if ($scheme = http) {
    return 301 https://{{ domain }}:{{ redirect_port_ssl|default(listen_port_ssl|default('443')) }}$request_uri;
}
{%- endif %}

{%- if ssl.enable_sts is defined and ssl.enable_sts == True %}
set $sts "";
if ($server_port = {{ listen_port_ssl|default('443') }}) {
    set $sts "max-age=31536000;";
}
add_header Strict-Transport-Security $sts;
{%- endif %}

# End SSL support for vhost
{%- endif %}
